/**
 * Copyright 2006 Cordys R&D B.V. 
 * 
 * This file is part of the Cordys HTTP Connector. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 package com.cordys.coe.ac.httpconnector.exception;

import com.eibus.localization.message.Message;
import com.eibus.localization.message.MessageSet;

/**
 * This code is generated by running com.cordys.coe.cep.wizards.localization.CoEMessageGenerator.
 */
public class HandlerExceptionMessages
{
	/**
	 * Holds the definition of the message set.
	 */
	public static final MessageSet MESSAGE_SET = MessageSet.getMessageSet("com.cordys.coe.ac.httpconnector.exception.HandlerExceptionMessages");

	/**
	 * Holds the definition of the message with ID ERROR_CONVERTING_THE_RESPONSE_TO_PROPER_XML.
	 * Message text:
	 * {0}
	 */
	public static final Message ERROR_CONVERTING_THE_RESPONSE_TO_PROPER_XML = MESSAGE_SET.getMessage("ERROR_CONVERTING_THE_RESPONSE_TO_PROPER_XML");
	/**
	 * Holds the definition of the message with ID ERROR_EXECUTING_CUSTOM_PARAMETER_FOR_CLASS_0.
	 * Message text:
	 * Error executing custom parameter for class {0}
	 */
	public static final Message ERROR_EXECUTING_CUSTOM_PARAMETER_FOR_CLASS_0 = MESSAGE_SET.getMessage("ERROR_EXECUTING_CUSTOM_PARAMETER_FOR_CLASS_0");
	/**
	 * Holds the definition of the message with ID MISSING_PROJECT_ID.
	 * Message text:
	 * Missing project ID
	 */
	public static final Message MISSING_PROJECT_ID = MESSAGE_SET.getMessage("MISSING_PROJECT_ID");
	/**
	 * Holds the definition of the message with ID THE_OLD_ROLE_VALUE_MUST_BE_FILLED.
	 * Message text:
	 * The old role value must be filled
	 */
	public static final Message THE_OLD_ROLE_VALUE_MUST_BE_FILLED = MESSAGE_SET.getMessage("THE_OLD_ROLE_VALUE_MUST_BE_FILLED");
	/**
	 * Holds the definition of the message with ID THE_ROLE_ID_MUST_BE_FILLED.
	 * Message text:
	 * The role ID must be filled
	 */
	public static final Message THE_ROLE_ID_MUST_BE_FILLED = MESSAGE_SET.getMessage("THE_ROLE_ID_MUST_BE_FILLED");
	/**
	 * Holds the definition of the message with ID THE_ROLE_VALUE_MUST_BE_FILLED.
	 * Message text:
	 * The role value must be filled
	 */
	public static final Message THE_ROLE_VALUE_MUST_BE_FILLED = MESSAGE_SET.getMessage("THE_ROLE_VALUE_MUST_BE_FILLED");
	/**
	 * Holds the definition of the message with ID UNKNOWN_HTTP_METHOD.
	 * Message text:
	 * Unknown HTTP method.
	 */
	public static final Message UNKNOWN_HTTP_METHOD = MESSAGE_SET.getMessage("UNKNOWN_HTTP_METHOD");
	/**
	 * Holds the definition of the message with ID UNABLE_TO_CONVERT_THE_XML_STRING_TO_A_BYTE_ARRAY.
	 * Message text:
	 * Unable to convert the XML string to a byte array.
	 */
	public static final Message UNABLE_TO_CONVERT_THE_XML_STRING_TO_A_BYTE_ARRAY = MESSAGE_SET.getMessage("UNABLE_TO_CONVERT_THE_XML_STRING_TO_A_BYTE_ARRAY");
	/**
	 * Holds the definition of the message with ID INVALID_URI_PARAMETER_TYPE_0.
	 * Message text:
	 * Invalid URI parameter type: {0}
	 */
	public static final Message INVALID_URI_PARAMETER_TYPE_0 = MESSAGE_SET.getMessage("INVALID_URI_PARAMETER_TYPE_0");
	/**
	 * Holds the definition of the message with ID PARAMETER_XPATH_IS_NOT_SET.
	 * Message text:
	 * Parameter XPath is not set.
	 */
	public static final Message PARAMETER_XPATH_IS_NOT_SET = MESSAGE_SET.getMessage("PARAMETER_XPATH_IS_NOT_SET");
	/**
	 * Holds the definition of the message with ID FOR_THE_RESTHTMLREQUESTHANDLER_THE_TAG_DESTINATION_MUST_BE_FILLED.
	 * Message text:
	 * For the RestHTMLRequestHandler the tag 'destination' must be filled
	 */
	public static final Message FOR_THE_RESTHTMLREQUESTHANDLER_THE_TAG_DESTINATION_MUST_BE_FILLED = MESSAGE_SET.getMessage("FOR_THE_RESTHTMLREQUESTHANDLER_THE_TAG_DESTINATION_MUST_BE_FILLED");
	/**
	 * Holds the definition of the message with ID FOR_THE_RESTHTMLREQUESTHANDLER_THE_TAG_NAME_MUST_BE_FILLED.
	 * Message text:
	 * For the RestHTMLRequestHandler the tag 'name' must be filled
	 */
	public static final Message FOR_THE_RESTHTMLREQUESTHANDLER_THE_TAG_NAME_MUST_BE_FILLED = MESSAGE_SET.getMessage("FOR_THE_RESTHTMLREQUESTHANDLER_THE_TAG_NAME_MUST_BE_FILLED");
	/**
	 * Holds the definition of the message with ID THE_VALUE_MUST_BE_FILLED_SINCE_THIS_IS_A_MANDATORY_PARAMETER.
	 * Message text:
	 * The value of parameter {0} must be filled since this is a mandatory parameter
	 */
	public static final Message THE_VALUE_MUST_BE_FILLED_SINCE_THIS_IS_A_MANDATORY_PARAMETER = MESSAGE_SET.getMessage("THE_VALUE_MUST_BE_FILLED_SINCE_THIS_IS_A_MANDATORY_PARAMETER");
	/**
	 * Holds the definition of the message with ID FOR_PARAMETER_0_NO_VALUE_COULD_BE_FOUND.
	 * Message text:
	 * For parameter {0} no value could be found.
	 */
	public static final Message FOR_PARAMETER_0_NO_VALUE_COULD_BE_FOUND = MESSAGE_SET.getMessage("FOR_PARAMETER_0_NO_VALUE_COULD_BE_FOUND");
	/**
	 * Holds the definition of the message with ID THE_PARAMETER_0_HAS_NO_VALUE.
	 * Message text:
	 * The parameter {0} has no value
	 */
	public static final Message THE_PARAMETER_0_HAS_NO_VALUE = MESSAGE_SET.getMessage("THE_PARAMETER_0_HAS_NO_VALUE");

}